@*  _NasBrowser.cshtml
    *  Version: 1.5 (2022.11.13)
    *
    *  Contributor
    *      Arime-chan
*@

@using Project24.App
@model Project24.Pages.Nas.IndexModel.DataModel
@{
    string prefix = "";
    string latestModColumnStyle = "width: 20ch;";
    string sizeColumnStyle = "width: 16ch;";

    if (Model.IsUploadMode)
    {
        prefix = "/<upload>";
        latestModColumnStyle = "max-width: 18ch";
        sizeColumnStyle = "width: 12ch;";
    }
    else
    {
        Layout = "_Layout";
    }

    object[] nasStatModel = new object[] { "Main", DriveUtils.NasDriveUtils };
    object[] appStatModel = new object[] { "Cache", DriveUtils.AppDriveUtils };

    string href = "";
}


<div class="text-center">

    <div class="d-flex flex-wrap">
        <partial name="_NasStatsDisplay" model="@nasStatModel" />
        <partial name="_NasStatsDisplay" model="@appStatModel" />
        <hr />
    </div>

    <div id="current-location" hidden>@Model.Path</div>
    <div id="io-operation-status" class="display-4 text-danger"></div>

    <div class="d-flex flex-wrap text-left" style="font-size: x-large;">
        @if (!Model.IsUploadMode && User.IsInRole(P24RoleName.NasUploader))
        {
            <a href="/Nas/Upload" class="btn btn-outline-primary mr-3">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-upload" viewBox="0 0 16 16">
                    <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z" />
                    <path d="M7.646 1.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 2.707V11.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 1 1-.708-.708l3-3z" />
                </svg>
            </a>
        }

        @{
            href = "/Nas" + prefix + "/";
            <span><a href="#" onclick="browseNas('@href')">root/</a></span>

            string pathArg = "/";
            for (int i = 0; i < Model.PathLayers.Count; ++i)
            {
                pathArg += Model.PathLayers[i] + "/";

                href = "/Nas" + prefix + pathArg.TrimEnd('/');
                <span><a href="#" onclick="browseNas('@href')">@Model.PathLayers[i]/</a></span>
            }

            if (Model.IsUploadMode)
            {
                <input type="text" id="input-new-folder-name" class="form-control form-control-sm col-4 ml-2" oninput="inputNewFolderName_OnChange()" />
                <span type="button" id="btn-create-folder" class="badge badge-primary text-wrap ml-2" style="width: 5rem; font-size: small; display: none"
                  onclick="createFolder()">Create Folder</span>
            }
        }
    </div>

    <table class="table table-sm table-hover">
        <thead>
            <tr>
                <th class="text-left" style="width: 64px;">Icon</th>
                <th class="text-left">Filename</th>
                <th class="text-center" style="@latestModColumnStyle">Latest Modified</th>
                <th class="text-center" style="@sizeColumnStyle">Size</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Files.Count; ++i)
            {
                var file = Model.Files[i];

                string path = file.RelativePath + "/" + file.Name;
                if (string.IsNullOrEmpty(file.RelativePath))
                    path = path[1..];

                path = path.Replace("'", "\\'");

                href = "/Nas" + prefix + "/" + path;

                string type = "";
                if (Model.Files[i].FileType == NasUtils.FileType.File)
                    type = "File";
                else if (Model.Files[i].FileType == NasUtils.FileType.Directory)
                    type = "Folder";

                <tr class="">
                    <td class="text-left px-1">
                        @if (Model.IsUploadMode)
                        {
                            <span type="button" id="btn-delete-file" class="badge badge-danger p-1" onclick="deleteFile('@path', '@type')">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                    <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5ZM11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0H11Zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5h9.916Zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5Z" />
                                </svg>
                            </span>

                            <span type="button" id="btn-copy-file" class="badge badge-secondary p-1" onclick="copyFile('@path', '@type')">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-box-arrow-right" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z" />
                                    <path fill-rule="evenodd" d="M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z" />
                                </svg>
                            </span>
                        }
                    </td>

                    @if (Model.IsUploadMode && file.FileType == NasUtils.FileType.File)
                    {
                        <td class="text-left text-break">@file.Name</td>
                    }
                    else
                    {
                        <td class="text-left text-break"><a href="#" onclick="browseNas('@href')">@file.Name</a></td>
                    }

                    <td class="text-right">@file.LastModified</td>
                    @if (file.FileType == NasUtils.FileType.File)
                    {
                        <td class="text-right">@AppUtils.FormatDataSize(file.Size)</td>
                    }
                    else
                    {
                        <td class="text-right"> </td>
                    }
                </tr>
            }
        </tbody>
    </table>

</div>

@if (!Model.IsUploadMode)
{
    @section Scripts {
<script type="text/javascript">
    function browseNas(_path) {
            window.location.href = _path;
    }
</script>
    }
}
